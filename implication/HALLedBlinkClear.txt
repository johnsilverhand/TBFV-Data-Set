T1 → D1：输入索引超出范围,不做任何操作
T1：ledStatus>LED_INDEX_2
D1：return

T2 → D2：输入索引在范围内且不影响优先级
T2: ledStatus ≤ LED_INDEX_2∧highPriority!=ledStatus
D2: NBEK_Led[ledStatus].led_mode = 0

T3 → D3：输入索引在范围内且影响优先级
T3:ledStatus≤LED_INDEX_2∧highPriority=ledStatus
D3:NBEK_Led[ledStatus].led_mode = 0 ∧ highPriority = max{i∣i∈[0,LED_INDEX_2],NBEK_Led[i].led_mode∧HAL_LED_BLINK>0}
∀i∈Z,(0≤i≤LED_INDEX_2∧i=ledStatus)→(NBEK_Led[i].led_mode=0)∧(∃j∈Z,(0≤j≤LED_INDEX_2∧(NBEK_Led[j].led_mode∧HAL_LED_BLINK)>0)→(highPriority= max{k∣0≤k≤LED_INDEX_2,(NBEK_Led[k].led_mode∧HAL_LED_BLINK)>0}))∧(¬∃j∈Z,(0≤j≤LED_INDEX_2∧(NBEK_Led[j].led_mode∧HAL_LED_BLINK)>0)→(highPriority=LED_INDEX_0))


D3:清除目标 LED 的模式：
将目标 LED 索引的 led_mode 设置为 0。
更新 highPriority
如果存在至少一个 LED 的模式包含 HAL_LED_BLINK：
找到符合条件的最大索引 并设置为新的优先级。
如果没有符合条件的 LED：优先级回退到默认值 LED_INDEX_0。

Z3描述：
(or
    
    (and (> ledStatus LED_INDEX_2) 
         → 
         (and (= (forall ((i Int)) (= NBEK_Led[i].led_mode NBEK_Led[i].led_mode))
                 (= highPriority highPriority))))

    
    (and (<= ledStatus LED_INDEX_2) 
         (not (= highPriority ledStatus)) 
         → 
         (and (= NBEK_Led[ledStatus].led_mode 0)
              (= (forall ((i Int) (not (= i ledStatus))) 
                     (= NBEK_Led[i].led_mode NBEK_Led[i].led_mode)))
              (= highPriority highPriority)))

    
    (and (<= ledStatus LED_INDEX_2) 
         (= highPriority ledStatus) 
         → 
        
        (and (>= ledStatus 0)
            (<= ledStatus LED_INDEX_2)
            → 
            (= (select NBEK_Led ledStatus) 0))

       
        (and (exists ((i Int))
                    (and (>= i 0)
                        (<= i LED_INDEX_2)
                        (> (bitwise-and (select NBEK_Led i) HAL_LED_BLINK) 0)))
            → 
            (= highPriority (max ((j Int))
                                (and (>= j 0)
                                    (<= j LED_INDEX_2)
                                    (> (bitwise-and (select NBEK_Led j) HAL_LED_BLINK) 0))))))

        
        (and (not (exists ((i Int))
                        (and (>= i 0)
                            (<= i LED_INDEX_2)
                            (> (bitwise-and (select NBEK_Led i) HAL_LED_BLINK) 0))))
            → 
            (= highPriority LED_INDEX_0)))
