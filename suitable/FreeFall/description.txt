//自由落体
//原来考虑不符，需增加整秒最后大于H0的情况（代码不加验证不合理性）
//加入D3
T1 := y < 0; D1 := t = "none" ∧ V = "none"  :当 y < 0 时，输出 "none"
T2 := y = 0; D2 := t = 0 ∧ V = 0       :当 y == 0 时，无需下落，输出 0
T3 := y > 0; D3 := ((1/2)*g*t*t >= y ∧ (1/2)*g*(t-1)*(t-1) < y ∧ ((1/2)*g*t*t <=h0)
v(((1/2)*g*t*t >= y ∧ (1/2)*g*(t-1)*(t-1) < y ∧ ((1/2)*g*t*t > h0) → V=0)
    :当 y > 0 时，从 t = 1 开始增加时间，直到下落距离 ≥ y，输出当前的时间 t,考虑超过h0时情况速度为0
